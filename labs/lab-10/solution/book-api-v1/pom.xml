<?xml version="1.0" encoding="UTF-8"?>
<project 
	xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>apigee</groupId>
	<artifactId>book-api-v1</artifactId>
	<version>-</version>
	<name>book-api-v1</name>
	<packaging>pom</packaging>
	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>Maven Plugin Repository</name>
			<url>http://repo1.maven.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<org.slf4j.simpleLogger.defaultLogLevel>info</org.slf4j.simpleLogger.defaultLogLevel>
		<project.root.dir>${basedir}</project.root.dir>
		<target.root.dir>${basedir}/target</target.root.dir>
		<apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
		<apigee.apiversion>v1</apigee.apiversion>
		<!-- value of version in  https://api.enterprise.apigee.com/v2 -->
		<apigee.org>${org}</apigee.org>
		<apigee.env>${env}</apigee.env>
		<apigee.username>${username}</apigee.username>
		<apigee.password>${password}</apigee.password>
		<apigee.options>update</apigee.options>
		<test.scheme>https</test.scheme>
		<test.domain>${apigee.org}-${apigee.env}.apigee.net/book/v1</test.domain>		
		<test.apikey>${apikey}</test.apikey>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>com.cj.jshintmojo</groupId>
				<artifactId>jshint-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>validate-proxy-sources</id>
						<phase>process-sources</phase>
						<goals>
							<goal>lint</goal>
						</goals>
						<configuration>
							<directories>
								<directory>apiproxy/resources/jsc</directory>
							</directories>
							<reporter>jslint</reporter>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${target.root.dir}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.root.dir}</directory>
									<includes>
										<include>apiproxy/**</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.apigee.build-tools.enterprise4g</groupId>
				<artifactId>apigee-edge-maven-plugin</artifactId>
				<version>1.1.6</version>
				<executions>
					<execution>
						<id>config-json</id>
						<phase>package</phase>
						<goals>
							<goal>configure</goal>
						</goals>
					</execution>
					<execution>
						<id>deploy-api-proxy</id>
						<phase>install</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>npm-install-for-test</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>
							<workingDirectory>test</workingDirectory>
							<commandlineArgs>install</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>run-integration-tests</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>node</executable>
							<failWithNullKeyOrValueInEnvironment>false</failWithNullKeyOrValueInEnvironment>
							<workingDirectory>test</workingDirectory>
							<commandlineArgs>./node_modules/cucumber/bin/cucumber-js --world-parameters '{ "scheme": "${test.scheme}", "domain": "${test.domain}", "apikey": "${test.apikey}" }' --format ./node_modules/cucumber-pretty</commandlineArgs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>auto-clean-init</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
					<execution>
						<id>auto-clean-install</id>
						<phase>install</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
